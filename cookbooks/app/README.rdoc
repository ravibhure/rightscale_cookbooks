= RightScale App Cookbook

== DESCRIPTION:

RightScale application server management cookbook

This is an abstract cookbook that defines the recipes and interface to
application provider cookbooks.  It is not a standalone cookbook and must be
used in conjunction with an application provider cookbook (i.e.
<tt>app_php</tt>, app_tomcat, app_passenger or a user created application
provider).

More detailed info you can find in app::* recipes description.

== REQUIREMENTS:

* Requires a VM launched from a RightScale managed RightImage
* Requires a corresponding app provider cookbook

== COOKBOOKS DEPENDENCIES:
Please see <tt>metadata.rb</tt> file for the latest dependencies.

* <tt>sys_firewall</tt>
* <tt>rightscale</tt>
* <tt>repo</tt>
* <tt>app_php</tt>
* <tt>app_passenger</tt>
* <tt>app_tomcat</tt>

== KNOWN LIMITATIONS:

There are no known limitations.

== SETUP:

In order to use App resource, you must create corresponding providers in your
app server cookbook. See for example <tt>app_passenger</tt>, <tt>app_php</tt> or
<tt>app_tomcat</tt> cookbooks.

You must define app attributes which will be used in initialized
<tt>app[default]</tt> resource.

Required attributes:

  node[:app][:provider] = "app_passenger"

Recommended:

  node[:app][:destination]
  node[:app][:port]
  node[:app][:root]
  node[:app][:database_name]
  node[:app][:database_user]
  node[:app][:database_password]
  node[:app][:database_sever_fqdn]

More detailed description of these attribute variables is located in resource
file description.

== USAGE:

1. Add the <tt>app_*::default</tt> recipe prior to the <tt>app::default</tt>
   recipe to define the provider.
2. Add the default recipe to tag your server as an appserver. This is used by
   servers (like databases) to identify their clients.
3. Add desired <tt>app::do_*</tt> recipes to your application server
   ServerTemplate.
4. Develop corresponding providers in your application server cookbook.
5. Define required and recommended attributes in your application server
   cookbook attributes file.

== DETAILS:

=== General
This cookbook is can only be used in conjunction with cookbooks that contain
Lightweight Providers which implement the 'app' interface. See the RightScale
app_php cookbook for an example.

Note: <tt>app[default]</tt> resource uses "persist true" flag, which allow to
save created resource and its attributes in memory for future use.

This cookbook contains recipes, required to connect your instance to RightScale
Load balancer ServerTemplate:

* <tt>do_loadbalancers_allow</tt>
* <tt>do_loadbalancers_deny</tt>
* <tt>request_loadbalancer_allow</tt>
* <tt>request_loadbalancer_deny</tt>

For more info please see: {Load Balancer Setups}[http://support.rightscale.com/03-Tutorials/02-AWS/02-Website_Edition/2.5_Load_Balancer_Setups].

=== Attributes:

* <tt>node[:app][:provider]</tt> - Set a default provider.
* <tt>node[:app][:port]</tt> - Set a default port to listen on. Default: 8000
* <tt>node[:app][:ip]</tt> - Ip to listen on. Default: First private IP

=== Definitions:

<b>app_add_listen_port</b>
Adds a port to the apache listen ports.conf file and node attribute

Create node[:apache][:listen_ports] - array of strings for the web server to listen on.

This definition created specifically for the apache2 cookbook at this time.

===== Example:

 app_add_listen_port php_port


=== Libraries-helpers:

===== RightScale::App::Helper.bind_ip(private_ips = [ ], public_ips = [ ])

Return the IP address of the interface that this application server listens on.

<b>Parameters</b>

* <tt>private_ips(Array)::</tt> List of private ips assigned to the application server
* <tt>public_ips(Array)::</tt> List of public ips assigned to the application server

<b>Returns</b>

<tt>String::</tt> IP Address

<b>Raise</b>

<tt>RuntimeError::</tt> If neither a valid private nor public ip can be found


===== RightScale::App::Helper.bind_port()

Return the port that this application server listens on

<b>Returns</b>

<tt>node[:app][:port](integer)</tt> Port number


===== RightScale::App::Helper.vhosts(vhost_list)

created to convert vhost names into array from a comma separated list

<b>Parameters</b>

<tt>vhost_list(Sting)::</tt> Comma separated list of virtual hosts

<b>Returns</b>

<tt>Array::</tt> Array of vhosts


=== LWRPs:

This cookbook provides abstract <tt>app</tt> resource. Which will act as
"interface" for corresponding Light Weight app_* providers.

This includes <tt>app_php</tt>, <tt>app_tomcat</tt> and <tt>app_passenger</tt>
cookbooks. Each of them contains an implementation of the corresponding app__*
Light Weight Provider which can be called using this resource.

Provider persisted in this cookbook will act as a cap if there will be no
another app_ Light Weight Provider implementation. To avoid unexpected fails.

For more information about Lightweight Resources and Providers (LWRPs), please
see: {Light Weight Resources and Providers (LWRP)}[http://support.rightscale.com/12-Guides/Chef_Cookbooks_Developer_Guide/08-Chef_Development/Lightweight_Resources_and_Providers_(LWRP)].


===== App resource actions

All actions declared in this resource define the interface for typical
application server operations.

* <tt>:install</tt> - Install packages required for application server setup

* <tt>:setup_vhost</tt> - Action designed to setup APP LWRP with common
  parameters required for apache vhost file

* <tt>:start</tt> - Action designed to setup user defined start sequence for
  application server.

* <tt>:stop</tt> - Action designed to setup user defined stop sequence for
  application server.

* <tt>:restart</tt> - Action designed to setup user defined restart sequence for
  application server.

* <tt>:code_update</tt> - Action designed to perform project source code
  update/download

* <tt>:setup_db_connection</tt> - Action designed to perform database
  configuration file creation

* <tt>:setup_monitoring</tt> - Action designed to install and setup of required
  monitoring software.


===== App resource attributes

* <tt>packages</tt> - Set of installed packages
* <tt>root</tt> - Application root
* <tt>port</tt> - Application port
* <tt>destination</tt> - Path to where project repo will be pulled
* <tt>database_name</tt> - Name of the required database
* <tt>database_user</tt> - Database user
* <tt>database_password</tt> - Database password
* <tt>database_sever_fqdn</tt> - Database server fqdn


===== Usage Examples:
Only basic examples here. More detailed examples of this resource use can be
found in the do_* and setup_* recipes in the cookbook.

 app "default" do
   persist true
end
   provider node[:app][:provider]
   packages node[:app][:packages]
   action :install
 end

 app "default" do
   database_name node[:app][:database_name]
   database_user node[:app][:database_user]
   database_password node[:app][:database_password]
   database_sever_fqdn node[:app][:database_sever_fqdn]
   action :setup_db_connection
 end

 app "default" do
   root node[:app][:root]
   port node[:app][:port].to_i
   action :setup_vhost
 end


= LICENSE:

Copyright RightScale, Inc. All rights reserved.  All access and use subject to the
RightScale Terms of Service available at http://www.rightscale.com/terms.php and,
if applicable, other agreements such as a RightScale Master Subscription Agreement.
